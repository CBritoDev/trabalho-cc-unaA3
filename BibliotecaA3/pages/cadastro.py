import streamlit as st
import re
import datetime


#Configura칞칚o da p치gina
st.set_page_config(
    page_title="Biblioteca Virtual",
    page_icon="游닄",
    layout="centered",
    initial_sidebar_state="auto",
)


#T칤tulo
st.title("Cadastro de usu치rio")
st.write("Seja bem-vindo ao sistema de cadastro de usu치rios da biblioteca virtual!")

#Inicializa칞칚o da vari치vel de login na sess칚o
if "userLogin" not in st.session_state:
    st.session_state.userLogin = None

#Fun칞칚o para coletar dados simples
def dadosSimples():
    nome = st.text_input("Digite seu nome", max_chars=20)
    sobrenome = st.text_input("Digite seu 칰ltimo sobrenome", max_chars=20)
    emailUsuario = st.text_input("Digite seu email")
    dataNascimentoUsuario = st.date_input(
        "Selecione sua data de nascimento", 
        min_value=datetime.date(1900, 1, 1),
        max_value=datetime.date.today()
    )
    
    usuarioSenha = st.text_input("Digite uma senha de 6 d칤gitos", type="password")
    return nome, sobrenome, emailUsuario, dataNascimentoUsuario, usuarioSenha

#Fun칞칚o para coletar dados do bibliotec치rio
def dadosBibliotecario():
    nome, sobrenome, emailUsuario, dataNascimentoUsuario, usuarioSenha = dadosSimples()
    registroBibliotecario = st.number_input("Digite seu registro de bibliotec치rio", step=1, format="%d")
    registroBibliotecario = int(registroBibliotecario)
    return nome, sobrenome, emailUsuario, dataNascimentoUsuario, usuarioSenha, registroBibliotecario

#Fun칞칚o para validar o e-mail
def validar_email(email):
    if re.match(r"[^@]+@[^@]+\.[^@]+", email):
        return True
    return False

#Fun칞칚o para validar a senha
def validar_senha(senha):
    return len(senha) == 6 and senha.isdigit()

#Fun칞칚o para realizar o login de administrador
def fazer_login():
    st.subheader("Login de Administrador")
    login = st.text_input("Digite seu usu치rio (adm)", key="login")
    senha = st.text_input("Digite sua senha", type="password", key="senha")
    if st.button("Fazer Login"):
        if login == "adm" and senha == "123456":
            st.session_state.userLogin = "adm"
            st.success("Login realizado com sucesso! Redirecionando...")
            st.rerun()  # Redefine a sess칚o e recarrega a p치gina
        else:
            st.error("Usu치rio ou senha incorretos.")

#Se o administrador estiver logado
if st.session_state.userLogin == "adm":
    st.success("Voc칡 est치 logado como Administrador.")
    st.header("Cadastro de Bibliotec치rio 游닀")
    
    nome, sobrenome, emailUsuario, dataNascimentoUsuario, usuarioSenha, registroBibliotecario = dadosBibliotecario()

    if st.button("Cadastrar Bibliotec치rio"):
        if not nome or not sobrenome or not emailUsuario or not usuarioSenha:
            st.error("Por favor, preencha todos os campos obrigat칩rios.")
        elif not validar_email(emailUsuario):
            st.error("Email inv치lido.")
        elif not validar_senha(usuarioSenha):
            st.error("Senha deve ter exatamente 6 d칤gitos num칠ricos.")
        else:
            st.success("Bibliotec치rio cadastrado com sucesso!")

else:
    #Se n칚o estiver logado como administrador, exibe o cadastro de usu치rio comum
    st.header("Cadastro de Usu치rio Comum 游녻")
    
    nome, sobrenome, emailUsuario, dataNascimentoUsuario, usuarioSenha = dadosSimples()

    if st.button("Cadastrar Usu치rio"):
        if not nome or not sobrenome or not emailUsuario or not usuarioSenha:
            st.error("Por favor, preencha todos os campos obrigat칩rios.")
        elif not validar_email(emailUsuario):
            st.error("Email inv치lido.")
        elif not validar_senha(usuarioSenha):
            st.error("Senha deve ter exatamente 6 d칤gitos num칠ricos.")
        else:
            st.success("Usu치rio cadastrado com sucesso!")
    
    st.divider()

    st.info("Se voc칡 칠 administrador, fa칞a login abaixo para cadastrar bibliotec치rios.")
    fazer_login()
